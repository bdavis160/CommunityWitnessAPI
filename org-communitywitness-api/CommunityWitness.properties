# This is an example settings file for the Community Witness API.
# Below there are explanations for each setting and 
# an example of each setting set with its default value.
# Uncomment and modify setting lines to set your own settings.
# Lines starting with # are comments and are ignored by the program.
# Blank lines are also ignored.


## Network Settings ##
# The URI the server should listen on, 
# which must start with either http:// or https://
# You can use the IP 0.0.0.0 to listen on all network interfaces,
# and if are using the standard port http or https ports 
# then you don't need to explicitly specify the port. 
# For example a value of http://0.0.0.0 would listen on port 80 on all interfaces.
#baseUri=http://127.0.0.1:8080

# The KeyStore file containing the TLS certificate and private key for this server.
# This should contain the path to a KeyStore file formatted in a format supported by
# Java, like JKS or PKCS12, which is accessible to the server.
# If you are using TLS also make sure your baseUri starts with https.
# If you aren't using TLS then you can just set this to none or a blank string.
#tlsKeyStoreFile=none

# The origins that are allowed to perform Cross-Origin requests against this API,
# where * is any origin. Lookup Cross-Origin requests to learn more about this.
#allowedCrossOrigin=*


## Security Settings ##
# Most settings below control the password hashing algorithm and may need tuning.
# To ensure that passwords are securely hashed these settings should be tuned
# so that hashing a password takes approximately 500 ms.
# The defaults are based on a small Google Cloud Platform VM with only 2 cores
# and 2 GiB of RAM, so you'll want to change them for other systems.
# To find good values you can run the following command on your server,
# replacing property names with their actual values and 'salt' with passwordHashSaltLength characters, 
# and modify the values until it takes around 0.500 seconds:
#   echo samplePassword | argon2 salt -t passwordHashTimeCost -k passwordHashMemoryCost -p passwordHashParallelism -l passwordHashLength

# The variant of the argon2 algorithm to use, 
# with argon2i being recommended for password hashing.
#passwordHashType=argon2i

# The memory cost of hashing in kibibytes (KiB). 
# This is the main parameter to raise to increase hashing time.
#passwordHashMemoryCost=131072

# The time cost, or number of iterations, of hashing.
# This is the secondary parameter to raise to increase hashing time.
#passwordHashTimeCost=3

# The number of threads to use for password hashing.
# This should be 2x the number of threads on your system, 
# or whatever fits your resource usage needs.
#passwordHashParallelism=4

# The length in bytes of the randomly generated salts for passwords.
# This can be changed to fit your storage requirements, but should be long enough
# that it's unlikely for two users to get the same salt.
#passwordHashSaltLength=32

# The length in bytes of the hashed password on its own,
# without the extra encoding data that is stored in the end.
# As with salt length this can be changed to fit your storage requirements,
# but should be kept fairly long to ensure security.
#passwordHashLength=32

# The length in bytes of an API key.
# This should be long enough to allow for a unique key for every user,
# and since the key bytes are encoded in Base64 it's nice to set this
# to a value that corresponds with a number of bits that's divisible by six to
# avoid extra padding characters.
# Note that the default value of 24 bytes is equivalent to 192 bits which
# is divisible by 6 and allows for 2^192 different API keys.
#apiKeyLength=24


## Database Settings##
# The location of your database with the Community Witness schema,
# in the JDBC URL format.
# It's recommended that you use a PostgreSQL database, as that is what
# this application was tested with.
#databaseUrl=jdbc:postgresql://commdbserver.ddns.net/cw_primary

# The username of an account on your database that can read and write.
#databaseUsername=postgres

# The password that goes along with the username from the last option.
#databasePassword=cwdefpass
